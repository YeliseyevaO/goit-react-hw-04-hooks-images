{"version":3,"sources":["Components/Searchbar/Searchbar.js","services/photo-api.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Loader/Loader.js","Components/Button/Button.js","Components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","fetchPhoto","a","photoName","currentPage","url","axios","get","data","hits","ImageGalleryItem","src","alt","ImageGallery","gallery","onClose","clickPhoto","console","log","map","id","webformatURL","tags","onClick","BildLoader","color","height","width","timeout","Button","foundMore","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","handleBackdropClick","event","target","window","addEventListener","this","removeEventListener","createPortal","crs","Component","App","setPhotoName","photoList","setPhotoList","setCurrentPage","isLoading","setIsLoading","setError","showModal","setShowModal","activePhoto","setActivePhoto","useEffect","scrollTo","top","documentElement","scrollHeight","behavior","getImages","images","error","setState","toggleModal","shouldRenderLoadMoreButton","length","largeImageURL","imgId","find","photo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ba17950.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./Searchbar.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setQuery(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(query);\r\n    setQuery(\"\");\r\n  };\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default Searchbar;\r\n","import axios from \"axios\";\r\nconst fetchPhoto = async (photoName = \"\", currentPage = 1) => {\r\n  const url = `https://pixabay.com/api/?q=${photoName}&page=${currentPage}&key=23352968-b8b048e55839ee6b2f6a0c2b8&image_type=photo&orientation=horizontal&per_page=12`;\r\n  const { data } = await axios.get(url);\r\n\r\n  return data.hits;\r\n};\r\nexport { fetchPhoto };\r\n","import React from \"react\";\r\nimport \"./ImageGalleryItem.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ImageGalleryItem({ src, alt }) {\r\n  return (\r\n    <>\r\n      <img src={src} alt={alt} className=\"ImageGalleryItem-image\" />\r\n    </>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport \"./ImageGallery.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ImageGallery({ gallery, onClose, clickPhoto }) {\r\n  console.log(gallery);\r\n  return (\r\n    <>\r\n      <ul className=\"ImageGallery\">\r\n        {gallery.map(({ id, webformatURL, tags }) => (\r\n          <li\r\n            className=\"ImageGalleryItem\"\r\n            key={id}\r\n            onClick={() => {\r\n              onClose();\r\n              clickPhoto(id);\r\n            }}\r\n          >\r\n            <ImageGalleryItem src={webformatURL} alt={tags} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  gallery: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onClose: PropTypes.func.isRequired,\r\n  clickPhoto: PropTypes.func.isRequired,\r\n};\r\n","import Loader from \"react-loader-spinner\";\r\nimport React from \"react\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst BildLoader = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Puff\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n};\r\n\r\nexport default BildLoader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Button.css\";\r\nconst Button = ({ foundMore }) => {\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={foundMore} className=\"moreButton\">\r\n        Загрузить ещё\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  foundMore: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    console.log(\"Modal componentDidMount\");\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"Modal componentWillUnmount\");\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.crs} alt={this.props.alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  crs: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Searchbar from \"./Components/Searchbar\";\nimport { fetchPhoto } from \"./services/photo-api\";\nimport ImageGallery from \"./Components/ImageGallery\";\nimport BildLoader from \"./Components/Loader/Loader\";\nimport Button from \"./Components/Button\";\nimport Modal from \"./Components/Modal/Modal\";\n\nfunction App() {\n  const [photoName, setPhotoName] = useState(\"\");\n  const [photoList, setPhotoList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [activePhoto, setActivePhoto] = useState({});\n\n  useEffect(() => {\n    if (photoList === []) {\n      return;\n    }\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }, [photoList]);\n\n  useEffect(() => {\n    if (photoName === \"\") {\n      return;\n    }\n    setIsLoading(true);\n    const getImages = async () => {\n      try {\n        const images = await fetchPhoto(photoName, currentPage);\n        setPhotoList((photoList) => [...photoList, ...images]);\n      } catch (error) {\n        setError({ error });\n      } finally {\n        this.setState({ isLoading: false });\n      }\n    };\n    getImages();\n  }, [photoName, currentPage]);\n\n  const findActivePhoto = (imgId) => {\n    setActivePhoto(photoList.find((photo) => photo.id === imgId));\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const shouldRenderLoadMoreButton = photoList.length > 0 && !isLoading;\n  const { largeImageURL, tags } = activePhoto;\n  return (\n    <>\n      <Searchbar onSubmit={setPhotoName(photoName)} />\n      <ImageGallery\n        gallery={photoList}\n        onClose={toggleModal}\n        clickPhoto={findActivePhoto}\n      />\n      {isLoading && <BildLoader />}\n      {shouldRenderLoadMoreButton && (\n        <Button foundMore={setCurrentPage((currentPage) => currentPage + 1)} />\n      )}\n      {showModal && (\n        <Modal onClose={toggleModal} crs={largeImageURL} alt={tags} />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}